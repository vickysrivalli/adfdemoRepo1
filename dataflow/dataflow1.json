{
	"name": "dataflow1",
	"properties": {
		"folder": {
			"name": "udemy"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_output_folder",
						"type": "DatasetReference"
					},
					"name": "empcsvadls"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_employee_new",
						"type": "DatasetReference"
					},
					"name": "Dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_output_folder",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookupempdept"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Emp_id as short,",
				"          Name as string,",
				"          Gender as string,",
				"          Salary as integer,",
				"          Dept_id as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empcsvadls",
				"source(output(",
				"          Dept_id as integer,",
				"          Dept_Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Dept",
				"empcsvadls, Dept lookup(empcsvadls@Dept_id == Dept@Dept_id,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupempdept",
				"lookupempdept derive(Salary = divide(Salary, 80),",
				"          Dept_new_name = iif(isNull(Dept_Name), 'Missing', Dept_Name),",
				"          Name = concat(Gender,'_',Name)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Emp_id as string,",
				"          Name as string,",
				"          Gender as string,",
				"          Salary as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}